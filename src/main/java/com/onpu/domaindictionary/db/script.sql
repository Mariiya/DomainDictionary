begin
    execute immediate 'drop table DICTIONARY_BANK CASCADE CONSTRAINTS';
    execute immediate 'drop table ELECTRONIC_DICTIONARY CASCADE CONSTRAINTS';
    execute immediate 'drop table DOMAIN_DICTIONARY CASCADE CONSTRAINTS';
    execute immediate 'drop table DD_USER CASCADE CONSTRAINTS';
    execute immediate 'drop table INTERNET_RESOURCE CASCADE CONSTRAINTS';
    execute immediate 'drop table RULE CASCADE CONSTRAINTS';
    execute immediate 'drop table DICTIONARY_ENTRY CASCADE CONSTRAINTS';
    execute immediate 'DROP function r_seq_next';
    execute immediate 'DROP function r_seq_curr';
    execute immediate 'DROP function seq_next';
    execute immediate 'DROP function seq_curr';
    execute immediate 'DROP SEQUENCE RSEQ';
    execute immediate 'DROP SEQUENCE SEQ';

exception
    when others then null;
end;
/


CREATE TABLE DD_USER
(
    USER_ID  INT                  NOT NULL ENABLE,
    NAME     VARCHAR2(100)        NOT NULL,
    EMAIL    VARCHAR2(100) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(100)        NOT NULL ENABLE,
    CONSTRAINT CON_USER_ID PRIMARY KEY (USER_ID)
);

CREATE TABLE DOMAIN_DICTIONARY
(
    DOMAIN_DICTIONARY_ID INT  NOT NULL ENABLE,
    CREATED_AT           DATE NOT NULL,
    USER_ID              INT  NOT NULL ENABLE,
    CONSTRAINT CON_DD_ID PRIMARY KEY (DOMAIN_DICTIONARY_ID),
    CONSTRAINT CON_DD_USER_ID FOREIGN KEY (USER_ID) REFERENCES DD_USER (USER_ID) ON DELETE CASCADE ENABLE
);

CREATE TABLE ELECTRONIC_DICTIONARY
(
    ELECTRONIC_DICTIONARY_ID INT           NOT NULL ENABLE,
    NAME                     VARCHAR2(100) NOT NULL,
    AUTHOR                   VARCHAR2(100),
    PATH_TO_FILE             VARCHAR2(100) NOT NULL ENABLE UNIQUE,
    CONSTRAINT CON_ELD_ID PRIMARY KEY (ELECTRONIC_DICTIONARY_ID)
);

CREATE TABLE DICTIONARY_ENTRY
(
    DICTIONARY_ENTRY_ID      INT          NOT NULL ENABLE,
    TERM                     VARCHAR(200) NOT NULL,
    DEFINITION               CLOB,
    DOMAIN_DICTIONARY_ID     INT,
    ELECTRONIC_DICTIONARY_ID INT,
    CONSTRAINT CON_DE_ID PRIMARY KEY (DICTIONARY_ENTRY_ID),
    CONSTRAINT CON_DOMAIN_D_ID FOREIGN KEY (DOMAIN_DICTIONARY_ID) REFERENCES DOMAIN_DICTIONARY (DOMAIN_DICTIONARY_ID) ON DELETE CASCADE ENABLE,
    CONSTRAINT CON_ELECTRONIC_D_ID FOREIGN KEY (ELECTRONIC_DICTIONARY_ID) REFERENCES ELECTRONIC_DICTIONARY (ELECTRONIC_DICTIONARY_ID) ON DELETE CASCADE ENABLE

);

CREATE TABLE RULE
(
    RULE_ID           INT     NOT NULL ENABLE PRIMARY KEY,
    ARTICLE_SEPARATOR CHAR(3) NOT NULL,
    TERM_SEPARATOR    CHAR(3) NOT NULL,
    RELATOR           CHAR(3) NOT NULL,
    STYLISTIC_ZONE    VARCHAR2(50)
);

CREATE TABLE DICTIONARY_BANK
(
    RESOURCE_ID INT          NOT NULL ENABLE,
    TYPE        VARCHAR2(50) NOT NULL,
    SUBTYPE     VARCHAR2(50) NOT NULL,
    RULE_ID     INT          NOT NULL ENABLE,
    CONSTRAINT CON_DB_ID PRIMARY KEY (RESOURCE_ID),
    CONSTRAINT CON_RULE_FK_ID FOREIGN KEY (RULE_ID) REFERENCES RULE (RULE_ID) ON DELETE CASCADE ENABLE
);



CREATE TABLE INTERNET_RESOURCE
(
    INTERNET_RESOURCE_ID INT           NOT NULL ENABLE,
    NAME                 VARCHAR2(100) NOT NULL,
    URL                  VARCHAR2(100) NOT NULL,
    CONSTRAINT CON_IR_ID PRIMARY KEY (INTERNET_RESOURCE_ID)
);

CREATE SEQUENCE SEQ START WITH 1 MAXVALUE 999999 INCREMENT BY 1 NOCACHE CYCLE;
CREATE FUNCTION seq_next RETURN NUMBER RESULT_CACHE IS
BEGIN
    RETURN SEQ.nextval;
END seq_next;
/
CREATE FUNCTION seq_curr RETURN NUMBER RESULT_CACHE IS
BEGIN
    RETURN SEQ.currval;
END seq_curr;
/

CREATE SEQUENCE RSEQ START WITH 1 MAXVALUE 999999 INCREMENT BY 1 NOCACHE CYCLE;
CREATE FUNCTION r_seq_next RETURN NUMBER RESULT_CACHE IS
BEGIN
    RETURN RSEQ.nextval;
END r_seq_next;
/
CREATE FUNCTION r_seq_curr RETURN NUMBER RESULT_CACHE IS
BEGIN
    RETURN RSEQ.currval;
END r_seq_curr;
/
